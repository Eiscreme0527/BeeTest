# Generated by Django 3.0.2 on 2020-02-04 16:53

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=11, unique=True, verbose_name='用户名')),
                ('real_name', models.CharField(max_length=20, verbose_name='真实姓名')),
                ('password', models.CharField(max_length=48, verbose_name='密码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('account_type', models.IntegerField(choices=[(1, '普通账户'), (2, '高级账户'), (3, '超级账户'), (4, '管理账户')], default=1, verbose_name='账号类型')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('login_time', models.DateTimeField(auto_now=True, verbose_name='登录时间')),
                ('last_login_time', models.DateTimeField(blank=True, default=datetime.datetime(2020, 2, 4, 8, 53, 11, 254141), verbose_name='上次登录时间')),
                ('account_status', models.IntegerField(choices=[(1, '正常'), (2, '冻结'), (3, '删除')], default=1, verbose_name='账户状态')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('integral', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, verbose_name='积分')),
                ('exp_time', models.DateTimeField(blank=True, default=datetime.datetime(2020, 2, 5, 8, 53, 11, 254141), verbose_name='Token过期时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'permissions': (('test_case_manage ', 'can manage test case'), ('task_call_manage', 'can manage task call'), ('user_manage', 'can manage user'), ('event_manage', 'can manage event'), ('report_form_manage', 'can manage report form'), ('notice_manage', 'can manage notice'), ('device_manage', 'can manage device'), ('log_manage', 'can manage log')),
                'default_permissions': (),
            },
        ),
    ]
